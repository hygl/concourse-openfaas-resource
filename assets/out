#!/bin/bash

set -e
set -o pipefail

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

# Read inputs
payload=$(mktemp $TMPDIR/request-payload.XXXXXX)
cat > $payload <&0

# Prepare
gateway=$(jq -r '.source.gateway // ""' < $payload)
username=$(jq -r '.source.username // ""' < $payload)
password=$(jq -r '.source.password // ""' < $payload)
manifest=$(jq -r '.params.manifest // ""' < $payload)
env=$(jq -r '.params.env // ""' < $payload)
secret=$(jq -r '.params.secret // ""' < $payload)
send_registry_auth=$(jq -r '.params.send_registry_auth // "false"' < $payload)

if [ -z "$gateway" ]; then
  echo "invalid payload (missing gateway)"
  exit 1
fi

if [ -z "$manifest" ]; then
  echo "invalid payload (missing manifest)"
  exit 1
fi

if [ ! -f "$1/$manifest" ]; then
  echo "invalid payload (manifest not found)"
  exit 1
fi

deploy_args="--gateway ${gateway} -f ${1}/${manifest}"

[ -z "${env}" ] \
|| deploy_args="${deploy_args} --env ${env}"

[ -z "${secret}" ] \
|| deploy_args="${deploy_args} --secret ${secret}"

[ "${send_registry_auth}" = "false" ] \
|| deploy_args="${deploy_args} --secret ${secret}"

if [ -n "$username" ]; then
  faas-cli login \
    --username "$username" \
    --password "$password" \
    --gateway "$gateway"
fi

faas-cli template pull
faas-cli deploy ${deploy_args}

echo '{"version":{"version":"none"}}' >&3
